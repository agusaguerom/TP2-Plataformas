generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Suscripcion {
  id             Int       @id @default(autoincrement())
  nombre         String
  precio_mensual Float
  duracion_dias  Int
  estado         Int       @default(1)
  Usuario        Usuario[]
}

model Usuario {
  id             String      @id @default(uuid())
  nombre         String
  apellido       String
  correo         String      @unique
  password       String
  createdAt      DateTime    @default(now())
  fk_suscripcion Int
  fk_rol         Int
  Artista        Artista[]
  Playlist       Playlist[]
  Seguidor       Seguidor[]
  rol            Rol         @relation(fields: [fk_rol], references: [id])
  suscripcion    Suscripcion @relation(fields: [fk_suscripcion], references: [id])
}

model Rol {
  id      Int       @id @default(autoincrement())
  nombre  String
  Usuario Usuario[]
}

model Artista {
  id          String     @id @default(uuid())
  nombre      String
  descripcion String
  image       String
  fk_genero   Int
  fk_usuario  String
  Album       Album[]
  genero      Genero     @relation(fields: [fk_genero], references: [id])
  usuario     Usuario    @relation(fields: [fk_usuario], references: [id])
  Cancion     Cancion[]
  Seguidor    Seguidor[]
}

model Genero {
  id      Int       @id @default(autoincrement())
  nombre  String
  estado  Int       @default(1)
  Artista Artista[]
  Cancion Cancion[]
}

model Playlist {
  id               Int                @id @default(autoincrement())
  nombre           String
  fecha_creacion   DateTime           @default(now())
  descripcion      String?
  fk_usuario       String
  usuario          Usuario            @relation(fields: [fk_usuario], references: [id])
  Playlist_cancion Playlist_cancion[]
}

model Album {
  id          String    @id @default(uuid())
  nombre      String
  publicacion DateTime  @default(now())
  fk_artista  String
  descripcion String
  artista     Artista   @relation(fields: [fk_artista], references: [id])
  Cancion     Cancion[]
}

model Cancion {
  id             String  @id @default(uuid())
  nombre         String
  duracion       String
  fk_album       String
  fk_genero      Int
  fk_artista     String
  reproducciones Int     @default(0)
  imagen         String?
  audio          String?
  estado         Int     @default(1)

  album            Album              @relation(fields: [fk_album], references: [id])
  artista          Artista            @relation(fields: [fk_artista], references: [id])
  genero           Genero             @relation(fields: [fk_genero], references: [id])
  Playlist_cancion Playlist_cancion[]
}

model Playlist_cancion {
  id          String   @id @default(uuid())
  fk_playlist Int
  fk_cancion  String
  cancion     Cancion  @relation(fields: [fk_cancion], references: [id])
  playlist    Playlist @relation(fields: [fk_playlist], references: [id])
}

model Seguidor {
  id         String  @id @default(uuid())
  fk_usuario String
  fk_artista String
  artista    Artista @relation(fields: [fk_artista], references: [id])
  usuario    Usuario @relation(fields: [fk_usuario], references: [id])
}
